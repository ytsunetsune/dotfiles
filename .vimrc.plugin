" ------------------------------------------------------------------------------
" NeoBundleで管理しているプラグイン読み込み
" ------------------------------------------------------------------------------ " operator-replace : yankしたものでreplaceする
map R <Plug>(operator-replace)
" Gundo：Undo履歴を追える (need python support)
nnoremap <F3> :GundoToggle<CR>

" vim-anzu：検索結果の個数表示
nmap n <Plug>(anzu-n-with-echo)
nmap N <Plug>(anzu-N-with-echo)
nmap * <Plug>(anzu-star-with-echo)
nmap # <Plug>(anzu-sharp-with-echo)
nmap <Esc><Esc> <Plug>(anzu-clear-search-status)
set statusline=%{anzu#search_status()}

" vim-altr：気持ちを読み取ってファイルを開く
nnoremap <F2>  <Plug>(altr-forward)

" gist-vim：Gistsをvimから使う
let g:gist_clip_command = 'xclip -selection clipboard'
let g:gist_detect_filetype = 1
let g:gist_open_browser_after_post = 1
let g:gist_show_privates = 1

" jedi-vim：python開発
let g:jedi#auto_initialization = 1
let g:jedi#popup_on_dot = 0
autocmd  FileType python let b:did_ftplugin = 1"

" vim-textobj-multiblock：カッコ系をまとめてib, abで扱う
omap ab <Plug>(textobj-multiblock-a)
omap ib <Plug>(textobj-multiblock-i)
vmap ab <Plug>(textobj-multiblock-a)
vmap ib <Plug>(textobj-multiblock-i)

" committia.vim：gitコミットログサポート
let g:committia_hooks = {}
function! g:committia_hooks.edit_open(info)
  setlocal spell
  " if nocommit message, start with insert mode
  if a:info.vcs ==# 'git' && getline(1) ==# ''
    startinsert
  end
  " Scroll the diff window from insert mode
  " Map <C-n> and <C-p>
  imap <buffer><C-n> <Plug>(committia-scroll-diff-down-half)
  imap <buffer><C-p> <Plug>(committia-scroll-diff-up-half)
endfunction

" clang-format：clang-formatを使ってC系のコードを整形する
let g:clang_format#style_options = {
            \ "AccessModifierOffset" : -4,
            \ "AllowShortIfStatementsOnASingleLine" : "true",
            \ "AlwaysBreakTemplateDeclarations" : "true",
            \ "Standard" : "C++11",
            \ "BreakBeforeBraces" : "Stroustrup",
            \ }

" vim-easy-align：整形
" Start interactive EasyAlign in visual mode (e.g. vip<Enter>)
vmap <Enter> <Plug>(EasyAlign)
" Start interactive EasyAlign for a motion/text object (e.g. <Leader>aip)
nmap <Leader>a <Plug>(EasyAlign)

" vim-quickhl：キーワードをハイライトする
nmap <Space>m <Plug>(quickhl-manual-this)
xmap <Space>m <Plug>(quickhl-manual-this)
nmap <Space>M <Plug>(quickhl-manual-reset)
xmap <Space>M <Plug>(quickhl-manual-reset)

" diffchar.vim：単語単位でvimdiff
" vimdiffで起動した際自動的に単語単位の差分(diffchar.vim)を有効にする
if &diff
  augroup enable_diffchar
    autocmd!
    autocmd VimEnter * execute "%SDChar"
  augroup END
endif

" vimshell：vim内で使えるshell
nnoremap <silent> ,is :VimShell<CR>
nnoremap <silent> ,iel :VimShellInteractive jskrbeusgl<CR>
nnoremap <silent> ,ipy :VimShellInteractive python<CR>
vmap <silent> <C-c><C-c> :VimShellSendString<CR>
nnoremap <silent> <C-c><C-c> <S-v>:VimShellSendString<CR>
augroup vim_eus
  autocmd!
  au BufNewFile,BufRead *.l nnoremap <buffer> <silent> <C-c><C-c> <S-v>:VimShellSendString<CR>
augroup END

" Unite.vim：統合UI
nnoremap <silent> ,uf :<C-u>UniteWithBufferDir -buffer-name=files file<CR>
nnoremap <silent> ,uF :<C-u>Unite neomru/file<CR>
nnoremap <silent> ,un :<C-u>Unite file/new <CR>
nnoremap <silent> ,ud :<C-u>Unite directory<CR>
nnoremap <silent> ,uD :<C-u>Unite neomru/directory <CR>
nnoremap <silent> ,uo :<C-u>Unite outline<CR>
nnoremap <silent> ,ub :<C-u>Unite buffer<CR>
nnoremap <silent> ,uu :<C-u>Unite buffer neomru/file<CR>
nnoremap <silent> ,uU :<C-u>UniteWithBufferDir -buffer-name=files buffer neomru/file file<CR>
nnoremap <silent> ,um :<C-u>Unite mark<CR>
nnoremap <silent> ,uy :<C-u>Unite history/yank<CR>

augroup unite_openclose
  autocmd!
  " ウィンドウを分割して開く
  au FileType unite nnoremap <silent> <buffer> <expr> <C-j> unite#do_action('split')
  au FileType unite inoremap <silent> <buffer> <expr> <C-j> unite#do_action('split')
  " ウィンドウを縦に分割して開く
  au FileType unite nnoremap <silent> <buffer> <expr> <C-l> unite#do_action('vsplit')
  au FileType unite inoremap <silent> <buffer> <expr> <C-l> unite#do_action('vsplit')
  " ESCキーを2回押すと終了する
  au FileType unite nnoremap <silent> <buffer> <ESC><ESC> q
  au FileType unite inoremap <silent> <buffer> <ESC><ESC> <ESC>q
augroup END
