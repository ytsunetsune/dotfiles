" ------------------------------------------------------------------------------
" NeoBundleで管理しているプラグイン読み込み
" ------------------------------------------------------------------------------

" operator-replace : yankしたものでreplaceする
map R <Plug>(operator-replace)
" Gundo：Undo履歴を追える (need python support)
nnoremap <F3> :GundoToggle<CR>

" vim-anzu：検索結果の個数表示
nmap n <Plug>(anzu-n-with-echo)
nmap N <Plug>(anzu-N-with-echo)
nmap * <Plug>(anzu-star-with-echo)
nmap # <Plug>(anzu-sharp-with-echo)
nmap <Esc><Esc> <Plug>(anzu-clear-search-status)
set statusline=%{anzu#search_status()}

" vim-altr：気持ちを読み取ってファイルを開く
nnoremap <F2>  <Plug>(altr-forward)

" gist-vim：Gistsをvimから使う
let g:gist_clip_command = 'xclip -selection clipboard'
let g:gist_detect_filetype = 1
let g:gist_open_browser_after_post = 1
let g:gist_show_privates = 1

" jedi-vim：python開発
let g:jedi#auto_initialization = 1
let g:jedi#popup_on_dot = 0
autocmd  FileType python let b:did_ftplugin = 1"

" vim-textobj-multiblock：カッコ系をまとめてib, abで扱う
omap ab <Plug>(textobj-multiblock-a)
omap ib <Plug>(textobj-multiblock-i)
vmap ab <Plug>(textobj-multiblock-a)
vmap ib <Plug>(textobj-multiblock-i)

" committia.vim：gitコミットログサポート
let g:committia_hooks = {}
function! g:committia_hooks.edit_open(info)
  setlocal spell
  " if nocommit message, start with insert mode
  if a:info.vcs ==# 'git' && getline(1) ==# ''
    startinsert
  end
  " Scroll the diff window from insert mode
  " Map <C-n> and <C-p>
  imap <buffer><C-n> <Plug>(committia-scroll-diff-down-half)
  imap <buffer><C-p> <Plug>(committia-scroll-diff-up-half)
endfunction

